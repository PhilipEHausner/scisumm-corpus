We first present a basic version ( Section 2.1 ) of dependency-based compositional semantics ( DCS ) , which captures the core idea of using trees to represent formal semantics . Although a DCS tree is a logical form , note that it looks like a syntactic dependency tree with predicates in place of words . , learning the wrong lexical asso- logic programs in a non-linguistic setting . In this paper , we learn to map questions to answers via latent logical forms , which are induced automatically from question-answer pairs . We represent functions by a set of inputoutput pairs , e.g. We represent functions by a set of inputoutput pairs , e.g. We first present a basic version ( Section 2.1 ) of dependency-based compositional semantics ( DCS ) , which captures the core idea of using trees to represent formal semantics . , w ( count ) = { ( S , n ) : n = |S| } . , w ( count ) = { ( S , n ) : n = |S| } . Figure 2 ( a ) shows an example of a DCS tree . , w ( count ) = { ( S , n ) : n = |S| } . Figure 2 ( a ) shows an example of a DCS tree . The denotation JzKw ( z evaluated on w ) is the set of consistent values of the root node ( see Figure 2 for