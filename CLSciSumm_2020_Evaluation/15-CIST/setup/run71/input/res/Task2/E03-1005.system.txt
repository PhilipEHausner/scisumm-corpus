Yet , his grammar contains more than 5 million subtrees and processing times of over 200 seconds per WSJ sentence are reported ( Bod 2003 ) . However , the problem of computing the most probable parse turns out to be NP-hard ( Sima\'an 1996 ) , mainly because the same parse tree can be generated by exponentially many derivations . \ 's ( 1999 ) and Bod\ 's ( 2001 ) estimators can be incorporated in his PCFGreduction , but did not report any experiments with these reductions . What is more important , is , that the best parse trees predicted by Simplicity-DOP are quite different from the best parse trees predicted by Likelihood-DOP . However , the problem of computing the most probable parse turns out to be NP-hard ( Sima\'an 1996 ) , mainly because the same parse tree can be generated by exponentially many derivations . The derivation with the smallest sum , or highest rank , is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod ( 2000b ) reports that Simplicity DOP is outperformed by Likelihood-DOP , its results are still rather impressive for such a simple model . But Goodman shows that with his PCFG-reduction he can efficiently compute the aforementioned maximum constituents parse . \ 's ( 1999 ) and Bod\ 's ( 2001 ) estimators can be incorporated in his PCFGreduction , but did not report any experiments with these reductions . For example