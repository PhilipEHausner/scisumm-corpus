Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
1,P87-1015,P01-1018,0,1987,0,"The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared","The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared","[2, 3, 118, 232]","['<S sid=""2"" ssid=""2"">In considering the relationship between formalisms, we show that it is useful to abstract away from the details of the formalism, and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation, we describe a class of formalisms which we call Linear Context- Free Rewriting Systems, and show they are recognizable in polynomial time and generate only semilinear languages.</S>', '<S sid=""3"" ssid=""1"">Much of the study of grammatical systems in computational linguistics has been focused on the weak generative capacity of grammatical formalism.</S>', '<S sid=""118"" ssid=""3"">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS\'s) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>', '<S sid=""232"" ssid=""38"">In considering this aspect of a formalism, we hope to better understand the relationship between the structural descriptions generated by the grammars of a formalism, and the properties of semilinearity and polynomial recognizability.</S>']","Hypothesis_Citation,Results_Citation"
2,P87-1015,E09-1055,0,"Vijay-Shanker et al, 1987",0,"Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS","Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS","[118, 151, 180, 230]","['<S sid=""118"" ssid=""3"">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS\'s) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>', '<S sid=""151"" ssid=""36"">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL\'s).</S>', '<S sid=""180"" ssid=""65"">The rewrite rules and the definition of the composition operations may be stored in the finite state control since G uses a finite number of them.</S>', '<S sid=""230"" ssid=""36"">LCFRS\'s have only been loosely defined in this paper; we have yet to provide a complete set of formal properties associated with members of this class.</S>']",Method_Citation
3,P87-1015,W07-2214,0,"Vijay-Shanker et al, 1987",0,"There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)","There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)","[1, 3, 119, 214]","['<S sid=""1"" ssid=""1"">We consider the structural descriptions produced by various grammatical formalisms in terms of the complexity of the paths and the relationship between paths in the sets of structural descriptions that each system can generate.</S>', '<S sid=""3"" ssid=""1"">Much of the study of grammatical systems in computational linguistics has been focused on the weak generative capacity of grammatical formalism.</S>', '<S sid=""119"" ssid=""4"">In defining LCFRS\'s, we hope to generalize the definition of CFG\'s to formalisms manipulating any structure, e.g. strings, trees, or graphs.</S>', '<S sid=""214"" ssid=""20"">LCFRS\'s share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>']",Method_Citation
4,P87-1015,P09-2003,0,,0,"They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)","They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)","[92, 118, 134, 207]","['<S sid=""92"" ssid=""77"">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>', '<S sid=""118"" ssid=""3"">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS\'s) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>', '<S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG\'s).</S>', '<S sid=""207"" ssid=""13"">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S>']",Method_Citation
5,P87-1015,P09-1111,0,"Vijay-Shanker et al, 1987",0,"Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community","Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community","[2, 3, 74, 207]","['<S sid=""2"" ssid=""2"">In considering the relationship between formalisms, we show that it is useful to abstract away from the details of the formalism, and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation, we describe a class of formalisms which we call Linear Context- Free Rewriting Systems, and show they are recognizable in polynomial time and generate only semilinear languages.</S>', '<S sid=""3"" ssid=""1"">Much of the study of grammatical systems in computational linguistics has been focused on the weak generative capacity of grammatical formalism.</S>', '<S sid=""74"" ssid=""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S>', '<S sid=""207"" ssid=""13"">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S>']","Hypothesis_Citation,Method_Citation"
6,P87-1015,P09-1111,0,"Vijay-Shanker et al, 1987",0,"We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)","We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)","[119, 146, 151, 229]","['<S sid=""119"" ssid=""4"">In defining LCFRS\'s, we hope to generalize the definition of CFG\'s to formalisms manipulating any structure, e.g. strings, trees, or graphs.</S>', '<S sid=""146"" ssid=""31"">Since every CFL is known to be semilinear (Parikh, 1966), in order to show semilinearity of some language, we need only show the existence of a letter equivalent CFL Our definition of LCFRS\'s insists that the composition operations are linear and nonerasing.</S>', '<S sid=""151"" ssid=""36"">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL\'s).</S>', '<S sid=""229"" ssid=""35"">In addition, the restricted version of CG\'s (discussed in Section 6) generates tree sets with independent paths and we hope that it can be included in a more general definition of LCFRS\'s containing formalisms whose tree sets have path sets that are themselves LCFRL\'s (as in the case of the restricted indexed grammars, and the hierarchy defined by Weir).</S>']",Method_Citation
7,P87-1015,P07-1021,0,"Vijay-Shanker et al, 1987",0,"We write REGD.k/ to refer to the class of regular dependency languages with a gap-degree bounded by k. Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms","Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms","[2, 92, 118, 164]","['<S sid=""2"" ssid=""2"">In considering the relationship between formalisms, we show that it is useful to abstract away from the details of the formalism, and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation, we describe a class of formalisms which we call Linear Context- Free Rewriting Systems, and show they are recognizable in polynomial time and generate only semilinear languages.</S>', '<S sid=""92"" ssid=""77"">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S>', '<S sid=""118"" ssid=""3"">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS\'s) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>', '<S sid=""164"" ssid=""49"">Although embedding this version of LCFRS\'s in the framework of ILFP developed by Rounds (1985) is straightforward, our motivation was to capture properties shared by a family of grammatical systems and generalize them defining a class of related formalisms.</S>']","Aim_Citation,Hypothesis_Citation,Method_Citation"
8,P87-1015,N09-1061,0,"Vijay-Shanker et al, 1987",0,"This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006) .In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)","This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006). In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)","[2, 3, 117, 118]","['<S sid=""2"" ssid=""2"">In considering the relationship between formalisms, we show that it is useful to abstract away from the details of the formalism, and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation, we describe a class of formalisms which we call Linear Context- Free Rewriting Systems, and show they are recognizable in polynomial time and generate only semilinear languages.</S>', '<S sid=""3"" ssid=""1"">Much of the study of grammatical systems in computational linguistics has been focused on the weak generative capacity of grammatical formalism.</S>', '<S sid=""117"" ssid=""2"">Our goal is to define a class of formal systems, and show that any member of this class will possess certain attractive properties.</S>', '<S sid=""118"" ssid=""3"">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS\'s) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>']","Hypothesis_Citation,Results_Citation"
9,P87-1015,N09-1061,0,1987,0,"We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)","We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)","[119, 146, 151, 229]","['<S sid=""119"" ssid=""4"">In defining LCFRS\'s, we hope to generalize the definition of CFG\'s to formalisms manipulating any structure, e.g. strings, trees, or graphs.</S>', '<S sid=""146"" ssid=""31"">Since every CFL is known to be semilinear (Parikh, 1966), in order to show semilinearity of some language, we need only show the existence of a letter equivalent CFL Our definition of LCFRS\'s insists that the composition operations are linear and nonerasing.</S>', '<S sid=""151"" ssid=""36"">We now turn our attention to the recognition of string languages generated by these formalisms (LCFRL\'s).</S>', '<S sid=""229"" ssid=""35"">In addition, the restricted version of CG\'s (discussed in Section 6) generates tree sets with independent paths and we hope that it can be included in a more general definition of LCFRS\'s containing formalisms whose tree sets have path sets that are themselves LCFRL\'s (as in the case of the restricted indexed grammars, and the hierarchy defined by Weir).</S>']",Method_Citation
10,P87-1015,W10-1407,0,"Vijay-Shanker et al, 1987",0,"LCFRS (Vijay-Shanker et al, 1987) are anatural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals","LCFRS (Vijay-Shanker et al, 1987) are a natural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals","[42, 74, 75, 158]","['<S sid=""42"" ssid=""27"">Suppose -y results from the adjunction of 71, ,-y, at the k distinct tree addresses 141, , nk in some elementary tree 7\', respectively.</S>', '<S sid=""74"" ssid=""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S>', '<S sid=""75"" ssid=""60"">A multicomponent Tree Adjoining Grammar (MCTAG) consists of a finite set of finite elementary tree sets.</S>', '<S sid=""158"" ssid=""43"">We can represent any derived tree of a TAG by the two substrings that appear in its frontier, and then define how the adjunction operation concatenates the substrings.</S>']","Hypothesis_Citation,Method_Citation"
11,P87-1015,W10-1407,0,"Vijay-Shanker et al, 1987",0,"A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S )wherea) N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..","A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S ) where N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..","[89, 90, 128, 141]","['<S sid=""89"" ssid=""74"">Hence, trees shown in Figure 8 can not be generated by any MCTAG (but can be generated by an IG) because the number of pairs of dependent paths grows with n. Since the derivation tees of TAG\'s, MCTAG\'s, and HG\'s are local sets, the choice of the structure used at each point in a derivation in these systems does not depend on the context at that point within the derivation.</S>', '<S sid=""90"" ssid=""75"">Thus, as in CFG\'s, at any point in the derivation, the set of structures that can be applied is determined only by a finite set of rules encapsulated by the grammar.</S>', '<S sid=""128"" ssid=""13"">As in the case of the derivation trees of CFG\'s, nodes are labeled by a member of some finite set of symbols (perhaps only implicit in the grammar as in TAG\'s) used to denote derived structures.</S>', '<S sid=""141"" ssid=""26"">Thus, the length of any string in L is a linear combination of the length of strings in some fixed finite subset of L, and thus L is said to have the constant growth property.</S>']",Method_Citation
12,P87-1015,E09-1053,0,1987,0,"In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))","In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))","[2, 134, 135, 228]","['<S sid=""2"" ssid=""2"">In considering the relationship between formalisms, we show that it is useful to abstract away from the details of the formalism, and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation, we describe a class of formalisms which we call Linear Context- Free Rewriting Systems, and show they are recognizable in polynomial time and generate only semilinear languages.</S>', '<S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG\'s).</S>', '<S sid=""135"" ssid=""20"">Unlike GCFG\'s, however, the composition operations of LCFRS\'s are restricted to be linear (do not duplicate unboundedly large structures) and nonerasing (do not erase unbounded structures, a restriction made in most modern transformational grammars).</S>', '<S sid=""228"" ssid=""34"">Since these path sets are semilinear, the property of independent paths in their tree sets is sufficient to cause semilinearity of the languages generated by them.</S>']",Method_Citation
13,P87-1015,E09-1053,0,"Vijay-Shanker et al, 1987",0,"2 By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of deriva tional structures are all regular (Vijay-Shanker et al., 1987)","By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of derivational structures are all regular (Vijay-Shanker et al., 1987)","[73, 74, 89, 228]","['<S sid=""73"" ssid=""58"">The equivalence of CC\'s with this restriction to TAG\'s and HG\'s is, however, still an open problem.</S>', '<S sid=""74"" ssid=""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S>', '<S sid=""89"" ssid=""74"">Hence, trees shown in Figure 8 can not be generated by any MCTAG (but can be generated by an IG) because the number of pairs of dependent paths grows with n. Since the derivation tees of TAG\'s, MCTAG\'s, and HG\'s are local sets, the choice of the structure used at each point in a derivation in these systems does not depend on the context at that point within the derivation.</S>', '<S sid=""228"" ssid=""34"">Since these path sets are semilinear, the property of independent paths in their tree sets is sufficient to cause semilinearity of the languages generated by them.</S>']",Method_Citation
14,P87-1015,E09-1053,0,"Vijay-Shanker et al, 1987",0,"It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)","It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)","[86, 93, 109, 111]","['<S sid=""86"" ssid=""71"">MCTAG\'s are able to generate tee sets having dependent paths.</S>', '<S sid=""93"" ssid=""78"">As is described in Section 4, the property of having a derivation tree set that is a local set appears to be useful in showing important properties of the languages generated by the formalisms.</S>', '<S sid=""109"" ssid=""15"">A geometrical progression of language families defined by Weir (1987) involves tree sets with increasingly complex path sets.</S>', '<S sid=""111"" ssid=""17"">.</S>']",Method_Citation
15,P87-1015,N10-1035,0,1987,0,"On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975) .Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings ,i.e., discontinuous phrases","On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975). Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings, i.e., discontinuous phrases","[2, 27, 74, 214]","['<S sid=""2"" ssid=""2"">In considering the relationship between formalisms, we show that it is useful to abstract away from the details of the formalism, and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation, we describe a class of formalisms which we call Linear Context- Free Rewriting Systems, and show they are recognizable in polynomial time and generate only semilinear languages.</S>', '<S sid=""27"" ssid=""12"">Thus, the tree sets generated by HG\'s are similar to those of CFG\'s, with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars, a tree rewriting formalism, was introduced by Joshi, Levy and Takahashi (1975) and Joshi (1983/85).</S>', '<S sid=""74"" ssid=""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S>', '<S sid=""214"" ssid=""20"">LCFRS\'s share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>']","Hypothesis_Citation,Method_Citation"
16,P87-1015,P12-1053,0,1987,0,"CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991) .3 Thus, CFTG are mildly context-sensitive since their generated string languages are semi-linear and can be parsed in polynomial time (Go ?mez-Rodr? ?guez et al, 2010)","CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991)","[2, 91, 118, 134]","['<S sid=""2"" ssid=""2"">In considering the relationship between formalisms, we show that it is useful to abstract away from the details of the formalism, and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by Context-Free Grammars On the basis of this observation, we describe a class of formalisms which we call Linear Context- Free Rewriting Systems, and show they are recognizable in polynomial time and generate only semilinear languages.</S>', '<S sid=""91"" ssid=""76"">We characterize a class of formalisms that have this property in Section 4.</S>', '<S sid=""118"" ssid=""3"">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS\'s) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S>', '<S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG\'s).</S>']","Hypothesis_Citation,Method_Citation"
