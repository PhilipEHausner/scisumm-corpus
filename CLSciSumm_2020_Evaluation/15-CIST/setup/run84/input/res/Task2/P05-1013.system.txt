Although the best published results for the Collins parser is 80 % UAS ( Collins , 1999 ) , this parser reaches 82 % when trained on the entire training data set , and an adapted version of Charniak & ( 1998 ) , any ( nonprojective ) dependency graph can be transformed into a projective one by a lifting operation , which replaces each non-projective arc wj wk by a projective arc wi & 8212 ; * & There exist a few robust broad-coverage parsers that produce non-projective dependency structures , notably Tapanainen and J & First , the training data for the parser is projectivized by applying a minimal number of lifting operations ( Kahane et al. , 1998 ) and encoding information about these lifts in arc labels . The fact that projective dependency parsers can never exactly reproduce the analyses found in non-projective treebanks is often neglected because of the relative scarcity of problematic constructions . Although the best published results for the Collins parser is 80 % UAS ( Collins , 1999 ) , this parser reaches 82 % when trained on the entire training data set , and an adapted version of Charniak & In the experiments below , we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on Swedish ( Nivre et al. , 2004 ) and English ( Nivre and Scholz , 2004 ) . Even this may be nondeterministic , in case the graph contains several