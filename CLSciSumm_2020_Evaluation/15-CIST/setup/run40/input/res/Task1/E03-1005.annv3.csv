Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
2,E03-1005,N06-1045,0,"Bod, 2003",0,"Data-Oriented Parsing (DOP)? s methodology is to calculate weighted derivations, but as noted in (Bod, 2003), it is the highest ranking parse, not derivation, that is desired","Data-Oriented Parsing (DOP)'s methodology is to calculate weighted derivations, but as noted in (Bod, 2003), it is the highest ranking parse, not derivation, that is desired","'52','75','76','105'","<S sid=""52"" ssid=""4"">The probability of a parse tree T is the sum of the probabilities of its distinct derivations.</S><S sid=""75"" ssid=""27"">This means that summing up over derivations of a tree in DOP yields the same probability as summing over all the isomorphic derivations in the PCFG.</S><S sid=""76"" ssid=""28"">Note that Goodman\s reduction method does still not allow for an efficient computation of the most probable parse tree of a sentence: there may still be exponentially many derivations generating the same tree.</S><S sid=""105"" ssid=""8"">The derivation with the smallest sum, or highest rank, is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP, its results are still rather impressive for such a simple model.</S>",Method_Citation
3,E03-1005,D07-1058,0,2003,0,"Goodman? s transform, in com bi nation with a range of heuristics, allowed Bod (2003) to run the DOP model on the Penn Treebank WSJ benchmark and obtain some of the best results obtained with a generative model","Goodman's transform, in combination with a range of heuristics, allowed Bod (2003) to run the DOP model on the Penn Treebank WSJ benchmark and obtain some of the best results obtained with a generative model","'38','44','105','130'","<S sid=""38"" ssid=""35"">Although Bod\s method obtains very competitive results on the Wall Street Journal (WSJ) task, the parsing time was reported to be over 200 seconds per sentence (Bod 2003).</S><S sid=""44"" ssid=""41"">But while Bod\s estimator obtains state-of-the-art results on the WSJ, comparable to Charniak (2000) and Collins (2000), Bonnema et al. \s estimator performs worse and is comparable to Collins (1996).</S><S sid=""105"" ssid=""8"">The derivation with the smallest sum, or highest rank, is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP, its results are still rather impressive for such a simple model.</S><S sid=""130"" ssid=""11"">While the PCFG reduction of Bod (2001) obtains state-of-the-art results on the WSJ, comparable to Charniak (2000), Bonnema et al. \s estimator performs worse and is comparable to Collins (1996).</S>","Hypothesis_Citation,Method_Citation"
4,E03-1005,D07-1058,0,"Bod, 2003",0,"Zuidema (2006a) shows that also the estimator (Bod, 2003) uses is biased and inconsistent, and will, even in the limit of infinite data, not correctly identify many possible distributions over trees","Zuidema (2006a) shows that also the estimator (Bod, 2003) uses is biased and inconsistent, and will, even in the limit of infinite data, not correctly identify many possible distributions over trees","'37','39','40','47'","<S sid=""37"" ssid=""34"">Bod (2001) used an alternative technique which samples a fixed number of subtrees of each depth and which has the effect of assigning roughly equal weight to each node in the training data.</S><S sid=""39"" ssid=""36"">Collins &amp; Duffy (2002) showed how the perceptron algorithm can be used to efficiently compute the best parse with DOP1\s subtrees, reporting a 5.1% relative reduction in error rate over the model in Collins (1999) on the WSJ.</S><S sid=""40"" ssid=""37"">Goodman (2002) furthermore showed how Bonnema et al. \s (1999) and Bod\s (2001) estimators can be incorporated in his PCFGreduction, but did not report any experiments with these reductions.</S><S sid=""47"" ssid=""44"">We show that a combination of a probabilistic and a simplicity metric, which chooses the simplest parse from the n likeliest parses, outperforms the use of these metrics alone.</S>","Hypothesis_Citation,Method_Citation"
5,E03-1005,P11-1086,0,"Bod, 2003",0,"Second, we compare against a composed-rule system, which is analogous to the Data Oriented Parsing (DOP) approach in parsing (Bod, 2003)","Second, we compare against a composed-rule system, which is analogous to the Data Oriented Parsing (DOP) approach in parsing (Bod, 2003)","'38','87','88','143'","<S sid=""38"" ssid=""35"">Although Bod\s method obtains very competitive results on the Wall Street Journal (WSJ) task, the parsing time was reported to be over 200 seconds per sentence (Bod 2003).</S><S sid=""87"" ssid=""39"">Yet, his grammar contains more than 5 million subtrees and processing times of over 200 seconds per WSJ sentence are reported (Bod 2003).</S><S sid=""88"" ssid=""40"">In this paper, we will test a simple extension of Goodman\s compact PCFG-reduction of DOP which has the same property as the normalization proposed in Bod (2001) in that it assigns roughly equal weight to each node in the training data.</S><S sid=""143"" ssid=""8"">While SL-DOP and LS-DOP have been compared before in Bod (2002), especially in the context of musical parsing, this paper presents the The DOP approach is based on two distinctive features: (1) the use of corpus fragments rather than grammar rules, and (2) the use of arbitrarily large fragments rather than restricted ones.</S>",Method_Citation
6,E03-1005,P04-1013,0,"Bod, 2003",0,"Our best performing model is more accurate than all these previous models except (Bod, 2003)","Our best performing model is more accurate than all these previous models except (Bod, 2003)","'34','46','100','107'","<S sid=""34"" ssid=""31"">But even with cross-validation, ML-DOP is outperformed by the much simpler DOP1 model on both the ATIS and OVIS treebanks (Bod 2000b).</S><S sid=""46"" ssid=""43"">Most previous notions of best parse tree in DOP1 were based on a probabilistic metric, with Bod (2000b) as a notable exception, who used a simplicity metric based on the shortest derivation.</S><S sid=""100"" ssid=""3"">In Bod (2000b), an alternative notion for the best parse tree was proposed based on a simplicity criterion: instead of producing the most probable tree, this model produced the tree generated by the shortest derivation with the fewest training subtrees.</S><S sid=""107"" ssid=""10"">This suggests that a model which combines these two notions of best parse may boost the accuracy.</S>",Method_Citation
7,E03-1005,P04-1013,0,"Bod, 2003",0,"We find that the discriminative probability model is much worse than the generative one, but that training to optimize the discriminative criteria results in improved performance. Performance of the latter model on the standard test set achieves 90.1% F-measure on constituents, which is the second best current ac curacy level, and only 0.6% below the current best (Bod, 2003) .This paper has also proposed a neural network training method which optimizes a discriminative criteria even when the parameters being estimated are those of a generative probability model","Performance of the latter model on the standard test set achieves 90.1% F-measure on constituents, which is the second best current accuracy level, and only 0.6% below the current best (Bod, 2003)","'87','100','134','135'","<S sid=""87"" ssid=""39"">Yet, his grammar contains more than 5 million subtrees and processing times of over 200 seconds per WSJ sentence are reported (Bod 2003).</S><S sid=""100"" ssid=""3"">In Bod (2000b), an alternative notion for the best parse tree was proposed based on a simplicity criterion: instead of producing the most probable tree, this model produced the tree generated by the shortest derivation with the fewest training subtrees.</S><S sid=""134"" ssid=""15"">This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained, while in the current experiment we used all subtrees as given by the PCFG-reduction.</S><S sid=""135"" ssid=""16"">In the following section first results of SL-DOP and LS-DOP with a compact PCFG-reduction. we will see that our new definition of best parse tree also outperforms the best results obtained in Bod (2001).</S>",Method_Citation
10,E03-1005,E06-2025,0,"Bod, 2003",0,"Similarly, (Bod, 2003) changes the way frequenciesfi are counted, with a similar effect","Similarly, (Bod, 2003) changes the way frequencies fi are counted, with a similar effect","'22','37','87','102'","<S sid=""22"" ssid=""19"">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S><S sid=""37"" ssid=""34"">Bod (2001) used an alternative technique which samples a fixed number of subtrees of each depth and which has the effect of assigning roughly equal weight to each node in the training data.</S><S sid=""87"" ssid=""39"">Yet, his grammar contains more than 5 million subtrees and processing times of over 200 seconds per WSJ sentence are reported (Bod 2003).</S><S sid=""102"" ssid=""5"">In case the shortest derivation is not unique, Bod (2000b) proposes to back off to a frequency ordering of the subtrees.</S>",Method_Citation
12,E03-1005,W06-2905,0,"Bod, 2003",0,"(henceforth, STSGs), which can represent single words, contiguous and noncontiguous MWEs, context-free rules or complete parse trees in a unified representation. My approach is closely related to work in statistical parsing known as Data-Oriented Parsing (DOP), an empirically highly successful approach with labeled recall and precision scores on the Penn Tree Bank that are among the best currently obtained (Bod, 2003)","My approach is closely related to work in statistical parsing known as Data-Oriented Parsing (DOP), an empirically highly successful approach with labeled recall and precision scores on the Penn Tree Bank that are among the best currently obtained (Bod, 2003)","'98','133','134','135'","<S sid=""98"" ssid=""1"">Most DOP models, such as in Bod (1993), Goodman (1996), Bonnema et al. (1997), Sima\an (2000) and Collins &amp; Duffy (2002), use a likelihood criterion in defining the best parse tree: they take (some notion of) the most likely (i.e. most probable) tree as a candidate for the best tree of a sentence.</S><S sid=""133"" ssid=""14"">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S><S sid=""134"" ssid=""15"">This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained, while in the current experiment we used all subtrees as given by the PCFG-reduction.</S><S sid=""135"" ssid=""16"">In the following section first results of SL-DOP and LS-DOP with a compact PCFG-reduction. we will see that our new definition of best parse tree also outperforms the best results obtained in Bod (2001).</S>","Implication_Citation,Method_Citation,Results_Citation"
13,E03-1005,W06-2905,0,"Bod, 2003",0,"Shown are results were only elementary trees with scores higher than 0.3 and 0.1 respectively are used. However, more interesting is a qualitative analysis of the STSG induced, which shows that ,un like DOP1, push-n-pull arrives at a grammar that gives high weights (and scores) to those elementary3We approximated the most probable parse as follows (fol lowing (Bod, 2003))","We approximated the most probable parse as follows (following (Bod, 2003))","'24','38','96','135'","<S sid=""24"" ssid=""21"">However, the problem of computing the most probable parse turns out to be NP-hard (Sima\an 1996), mainly because the same parse tree can be generated by exponentially many derivations.</S><S sid=""38"" ssid=""35"">Although Bod\s method obtains very competitive results on the Wall Street Journal (WSJ) task, the parsing time was reported to be over 200 seconds per sentence (Bod 2003).</S><S sid=""96"" ssid=""48"">However, as mentioned above, efficient parsing does not necessarily mean efficient disambiguation: the exact computation of the most probable parse remains exponential.</S><S sid=""135"" ssid=""16"">In the following section first results of SL-DOP and LS-DOP with a compact PCFG-reduction. we will see that our new definition of best parse tree also outperforms the best results obtained in Bod (2001).</S>","Hypothesis_Citation,Method_Citation"
14,E03-1005,P05-1022,0,"Bod, 2003",0,"This result is only slightly higher than the highest reported result for this test-set, Bod? s (.907) (Bod,2003)","This result is only slightly higher than the highest reported result for this test-set, Bod's (.907) (Bod,2003)","'38','86','87','134'","<S sid=""38"" ssid=""35"">Although Bod\s method obtains very competitive results on the Wall Street Journal (WSJ) task, the parsing time was reported to be over 200 seconds per sentence (Bod 2003).</S><S sid=""86"" ssid=""38"">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S><S sid=""87"" ssid=""39"">Yet, his grammar contains more than 5 million subtrees and processing times of over 200 seconds per WSJ sentence are reported (Bod 2003).</S><S sid=""134"" ssid=""15"">This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained, while in the current experiment we used all subtrees as given by the PCFG-reduction.</S>",Method_Citation
16,E03-1005,P07-1051,0,2003,0,"This assumption is in consonance with the principle of simplicity, but there are also empirical reasons for the shortest derivation assumption: in Bod (2003) and Hearne and Way (2006), it is shown that DOP models that select the preferred parse of a test sentence using the shortest derivation criterion perform very well","This assumption is in consonance with the principle of simplicity, but there are also empirical reasons for the shortest derivation assumption: in Bod (2003) and Hearne and Way (2006), it is shown that DOP models that select the preferred parse of a test sentence using the shortest derivation criterion perform very well","'46','98','100','105'","<S sid=""46"" ssid=""43"">Most previous notions of best parse tree in DOP1 were based on a probabilistic metric, with Bod (2000b) as a notable exception, who used a simplicity metric based on the shortest derivation.</S><S sid=""98"" ssid=""1"">Most DOP models, such as in Bod (1993), Goodman (1996), Bonnema et al. (1997), Sima\an (2000) and Collins &amp; Duffy (2002), use a likelihood criterion in defining the best parse tree: they take (some notion of) the most likely (i.e. most probable) tree as a candidate for the best tree of a sentence.</S><S sid=""100"" ssid=""3"">In Bod (2000b), an alternative notion for the best parse tree was proposed based on a simplicity criterion: instead of producing the most probable tree, this model produced the tree generated by the shortest derivation with the fewest training subtrees.</S><S sid=""105"" ssid=""8"">The derivation with the smallest sum, or highest rank, is taken as the final best derivation producing the best parse tree in Simplicity-DOP.3 Although Bod (2000b) reports that Simplicity DOP is outperformed by Likelihood-DOP, its results are still rather impressive for such a simple model.</S>","Hypothesis_Citation,Method_Citation"
17,E03-1005,P07-1051,0,"Bod, 2003",0,"But equally important is the fact that this new DOP* model does not suffer from a decrease in parse accuracy if larger subtrees are included, whereas the original DOP model needs to be redressed by a correction factor to maintain this property (Bod 2003)","But equally important is the fact that this new DOP* model does not suffer from a decrease in parse accuracy if larger subtrees are included, whereas the original DOP model needs to be redressed by a correction factor to maintain this property (Bod 2003)","'4','82','86','134'","<S sid=""4"" ssid=""1"">The distinctive feature of the DOP approach when it was proposed in 1992 was to model sentence structures on the basis of previously observed frequencies of sentence structure fragments, without imposing any constraints on the size of these fragments.</S><S sid=""82"" ssid=""34"">Bonnema et al. (1999) show that as a consequence too much weight is given to larger subtrees, and that the parse accuracy of DOP1 deteriorates if (very) large subtrees are included.</S><S sid=""86"" ssid=""38"">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S><S sid=""134"" ssid=""15"">This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained, while in the current experiment we used all subtrees as given by the PCFG-reduction.</S>","Hypothesis_Citation,Method_Citation"
18,E03-1005,P07-1051,0,2003,0,"Of course, it is well-known that a supervised parser? s f-score decreases if it is transferred to another domain: for example, the (non-binarized) WSJ-trained DOP model in Bod (2003) decreases from around 91% to 85.5% f score if tested on the Brown corpus","Of course, it is well-known that a supervised parser's f-score decreases if it is transferred to another domain: for example, the (non-binarized) WSJ-trained DOP model in Bod (2003) decreases from around 91% to 85.5% f score if tested on the Brown corpus","'11','86','87','88'","<S sid=""11"" ssid=""8"">The DOP model, on the other hand, was the first model (to the best of our knowledge) that proposed not to train a predefined grammar on a corpus, but to directly use corpus fragments as a grammar.</S><S sid=""86"" ssid=""38"">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S><S sid=""87"" ssid=""39"">Yet, his grammar contains more than 5 million subtrees and processing times of over 200 seconds per WSJ sentence are reported (Bod 2003).</S><S sid=""88"" ssid=""40"">In this paper, we will test a simple extension of Goodman\s compact PCFG-reduction of DOP which has the same property as the normalization proposed in Bod (2001) in that it assigns roughly equal weight to each node in the training data.</S>",Method_Citation
19,E03-1005,W04-0305,0,"Bod, 2003",0,"A moderately larger vocabulary version (4215 tag-word pairs) of this parser achieves 89.8% F-measure on section 0, where the best current result on the testing set is 90.7% (Bod, 2003)","A moderately larger vocabulary version (4215 tag-word pairs) of this parser achieves 89.8% F-measure on section 0, where the best current result on the testing set is 90.7% (Bod, 2003)","'38','86','134','135'","<S sid=""38"" ssid=""35"">Although Bod\s method obtains very competitive results on the Wall Street Journal (WSJ) task, the parsing time was reported to be over 200 seconds per sentence (Bod 2003).</S><S sid=""86"" ssid=""38"">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S><S sid=""134"" ssid=""15"">This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained, while in the current experiment we used all subtrees as given by the PCFG-reduction.</S><S sid=""135"" ssid=""16"">In the following section first results of SL-DOP and LS-DOP with a compact PCFG-reduction. we will see that our new definition of best parse tree also outperforms the best results obtained in Bod (2001).</S>",Method_Citation
20,E03-1005,P06-1109,0,2003,0,The probability of a parse tree T is the sum of the 1 This subtree probability is redressed by a simple correction factor discussed in Goodman (2003: 136) and Bod (2003),This subtree probability is redressed by a simple correction factor discussed in Goodman (2003: 136) and Bod (2003),"'30','36','68','72'","<S sid=""30"" ssid=""27"">Bod (2000a) solved this problem by training the subtree probabilities by a maximum likelihood procedure based on Expectation-Maximization.</S><S sid=""36"" ssid=""33"">As an alternative, Bonnema et al. (1999) propose a subtree estimator which reduces the probability of a tree by a factor of two for each non-root non-terminal it contains.</S><S sid=""68"" ssid=""20"">Thus, there are aj= (bk+ 1)(ci + 1) possible subtrees headed by A @j. Goodman then gives a simple small PCFG with the following property: for every subtree in the training corpus headed by A, the grammar will generate an isomorphic subderivation with probability 1/a.</S><S sid=""72"" ssid=""24"">Goodman then shows by simple induction that subderivations headed by A with external nonterminals at the roots and leaves, internal nonterminals elsewhere have probability 1/a.</S>",Method_Citation
