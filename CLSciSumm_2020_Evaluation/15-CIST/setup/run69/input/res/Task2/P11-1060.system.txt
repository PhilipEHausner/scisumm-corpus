In DCS , we start with lexical triggers , which are 6 Conclusion more basic than CCG lexical entries . ( 2010 ) , we obviate the need for annotated logical forms by considering the endto-end problem of mapping questions to answers . ; rm : cmi . We first present a basic version ( Section 2.1 ) of dependency-based compositional semantics ( DCS ) , which captures the core idea of using trees to represent formal semantics . We first present a basic version ( Section 2.1 ) of dependency-based compositional semantics ( DCS ) , which captures the core idea of using trees to represent formal semantics . As another example , w ( average ) = { ( S , & # 175 ; x ) : We write a DCS tree z as hp ; r1 : c1 ; ... These rules are often too stringent , cused on aligning text to a world ( Liang et al. , 2009 ) , and for complex utterances , especially in free word- using text in reinforcement learning ( Branavan et al. , order languages , either disharmonic combinators are 2009 ; Branavan et al. , 2010 ) , and many others . In fact , DCS performs comparably to even the version of SEMRESP trained using logical forms . 248 ; } . This algorithm is linear in the number of nodes times the size of the denotations.1 Now the dual importance of trees in DCS is