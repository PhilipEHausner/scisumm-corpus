Citance Number,Citation Marker,Citation Marker Offset,Citation Offset,Citation Text,Citing Article,Discourse Facet,Reference Article,Reference Offset,Reference Text,Reference Text Clean,fileName
1,1987,0,0,"The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared",P01-1018,Results_Citation,P87-1015,'177',"<S sid=""177"" ssid=""62"">In the next section, we show how an ATM can accept the strings generated by a grammar in a LCFRS formalism in logspace, and hence show that each family can be recognized in polynomial time.</S>","<S sid=""177"" ssid=""62"">In the next section, we show how an ATM can accept the strings generated by a grammar in a LCFRS formalism in logspace, and hence show that each family can be recognized in polynomial time.</S>",P87-1015.csv
2,"Vijay-Shanker et al, 1987",0,0,"Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS",E09-1055,Results_Citation,P87-1015,'191',"<S sid=""191"" ssid=""76"">In addition to the tapes required to store the indices, M requires one work tape for splitting the substrings.</S>","<S sid=""191"" ssid=""76"">In addition to the tapes required to store the indices, M requires one work tape for splitting the substrings.</S>",P87-1015.csv
3,"Vijay-Shanker et al, 1987",0,0,"There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)",W07-2214,Method_Citation,P87-1015,'53',"<S sid=""53"" ssid=""38"">We focus on this difference between the tree sets of CFG's and IG's, and formalize the notion of dependence between paths in a tree set in Section 3.</S>","<S sid=""53"" ssid=""38"">We focus on this difference between the tree sets of CFG's and IG's, and formalize the notion of dependence between paths in a tree set in Section 3.</S>",P87-1015.csv
4,NA,0,0,"They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)",P09-2003,Method_Citation,P87-1015,'217',"<S sid=""217"" ssid=""23"">In considering the recognition of these languages, we were forced to be more specific regarding the relationship between the structures derived by these formalisms and the substrings they span.</S>","<S sid=""217"" ssid=""23"">In considering the recognition of these languages, we were forced to be more specific regarding the relationship between the structures derived by these formalisms and the substrings they span.</S>",P87-1015.csv
5,"Vijay-Shanker et al, 1987",0,0,"Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community",P09-1111,Method_Citation,P87-1015,'217',"<S sid=""217"" ssid=""23"">In considering the recognition of these languages, we were forced to be more specific regarding the relationship between the structures derived by these formalisms and the substrings they span.</S>","<S sid=""217"" ssid=""23"">In considering the recognition of these languages, we were forced to be more specific regarding the relationship between the structures derived by these formalisms and the substrings they span.</S>",P87-1015.csv
6,"Vijay-Shanker et al, 1987",0,0,"We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)",P09-1111,Method_Citation,P87-1015,'108',"<S sid=""108"" ssid=""14"">We adapt the string pumping lemma for the class of languages corresponding to the complexity of the path set.</S>","<S sid=""108"" ssid=""14"">We adapt the string pumping lemma for the class of languages corresponding to the complexity of the path set.</S>",P87-1015.csv
7,"Vijay-Shanker et al, 1987",0,0,"We write REGD.k/ to refer to the class of regular dependency languages with a gap-degree bounded by k. Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms",P07-1021,Hypothesis_Citation,P87-1015,'134',"<S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S>","<S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S>",P87-1015.csv
8,"Vijay-Shanker et al, 1987",0,0,"This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006) .In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)",N09-1061,Method_Citation,P87-1015,'154',"<S sid=""154"" ssid=""39"">Since each composition operation is linear and nonerasing, a bounded sequences of substrings associated with the resulting structure is obtained by combining the substrings in each of its arguments using only the concatenation operation, including each substring exactly once.</S>","<S sid=""154"" ssid=""39"">Since each composition operation is linear and nonerasing, a bounded sequences of substrings associated with the resulting structure is obtained by combining the substrings in each of its arguments using only the concatenation operation, including each substring exactly once.</S>",P87-1015.csv
9,1987,0,0,"We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)",N09-1061,Method_Citation,P87-1015,'108',"<S sid=""108"" ssid=""14"">We adapt the string pumping lemma for the class of languages corresponding to the complexity of the path set.</S>","<S sid=""108"" ssid=""14"">We adapt the string pumping lemma for the class of languages corresponding to the complexity of the path set.</S>",P87-1015.csv
10,"Vijay-Shanker et al, 1987",0,0,"LCFRS (Vijay-Shanker et al, 1987) are anatural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals",W10-1407,Implication_Citation,P87-1015,'74',"<S sid=""74"" ssid=""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S>","<S sid=""74"" ssid=""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S>",P87-1015.csv
11,"Vijay-Shanker et al, 1987",0,0,"A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S )wherea) N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..",W10-1407,Method_Citation,P87-1015,'175',"<S sid=""175"" ssid=""60"">M works in space S(n) if for every string that M accepts no configuration exceeds space S(n).</S>","<S sid=""175"" ssid=""60"">M works in space S(n) if for every string that M accepts no configuration exceeds space S(n).</S>",P87-1015.csv
12,1987,0,0,"In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))",E09-1053,Results_Citation,P87-1015,'60',"<S sid=""60"" ssid=""45"">Gazdar (1985) considers a restriction of IG's in which no more than one nonterminal on the right-hand-side of a production can inherit the stack from the left-hand-side.</S>","<S sid=""60"" ssid=""45"">Gazdar (1985) considers a restriction of IG's in which no more than one nonterminal on the right-hand-side of a production can inherit the stack from the left-hand-side.</S>",P87-1015.csv
13,"Vijay-Shanker et al, 1987",0,0,"2 By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of deriva tional structures are all regular (Vijay-Shanker et al., 1987)",E09-1053,Results_Citation,P87-1015,'157',"<S sid=""157"" ssid=""42"">For example, in TAG's a derived auxiliary tree spans two substrings (to the left and right of the foot node), and the adjunction operation inserts another substring (spanned by the subtree under the node where adjunction takes place) between them (see Figure 3).</S>","<S sid=""157"" ssid=""42"">For example, in TAG's a derived auxiliary tree spans two substrings (to the left and right of the foot node), and the adjunction operation inserts another substring (spanned by the subtree under the node where adjunction takes place) between them (see Figure 3).</S>",P87-1015.csv
14,"Vijay-Shanker et al, 1987",0,0,"It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)",E09-1053,Method_Citation,P87-1015,'93',"<S sid=""93"" ssid=""78"">As is described in Section 4, the property of having a derivation tree set that is a local set appears to be useful in showing important properties of the languages generated by the formalisms.</S>","<S sid=""93"" ssid=""78"">As is described in Section 4, the property of having a derivation tree set that is a local set appears to be useful in showing important properties of the languages generated by the formalisms.</S>",P87-1015.csv
15,1987,0,0,"On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975) .Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings ,i.e., discontinuous phrases",N10-1035,Hypothesis_Citation,P87-1015,'128',"<S sid=""128"" ssid=""13"">As in the case of the derivation trees of CFG's, nodes are labeled by a member of some finite set of symbols (perhaps only implicit in the grammar as in TAG's) used to denote derived structures.</S>","<S sid=""128"" ssid=""13"">As in the case of the derivation trees of CFG's, nodes are labeled by a member of some finite set of symbols (perhaps only implicit in the grammar as in TAG's) used to denote derived structures.</S>",P87-1015.csv
16,1987,0,0,"CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991) .3 Thus, CFTG are mildly context-sensitive since their generated string languages are semi-linear and can be parsed in polynomial time (Go ?mez-Rodr? ?guez et al, 2010)",P12-1053,Method_Citation,P87-1015,'108',"<S sid=""108"" ssid=""14"">We adapt the string pumping lemma for the class of languages corresponding to the complexity of the path set.</S>","<S sid=""108"" ssid=""14"">We adapt the string pumping lemma for the class of languages corresponding to the complexity of the path set.</S>",P87-1015.csv
