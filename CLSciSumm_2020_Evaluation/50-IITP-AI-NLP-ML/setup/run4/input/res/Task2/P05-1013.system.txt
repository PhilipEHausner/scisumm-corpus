we have presented a new method for non-projective dependency parsing, based on a combination of data-driven projective dependency parsing and graph transformation techniques.
in this paper, we show how non-projective dependency parsing can be achieved by combining a datadriven projective parser with special graph transformation techniques.
in the first part of the experiment, dependency graphs from the treebanks were projectivized using the algorithm described in section 2.
we call this pseudoprojective dependency parsing, since it is based on a notion of pseudo-projectivity (kahane et al., 1998).
the overall parsing accuracy obtained with the pseudo-projective approach is still lower than for the best projective parsers.
in the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on swedish (nivre et al., 2004) and english (nivre and scholz, 2004).
there exist a few robust broad-coverage parsers that produce non-projective dependency structures, notably tapanainen and jÂ¨arvinen (1997) and wang and harper (2004) for english, foth et al. (2004) for german, and holan (2004) for czech.
table 5 shows the overall parsing accuracy attained with the three different encoding schemes, compared to the baseline (no special arc labels) and to training directly on non-projective dependency graphs.
we show how a datadriven deterministic dependency parser, in itself restricted to projective structures, can be combined with graph transformation techniques to produce non-projective structures.
compared to related work on the recovery of long-distance dependencies in constituency-based parsing, our approach is similar to that of dienes and dubey (2003) in that the processing of non-local dependencies is partly integrated in the parsing process, via an extension of the set of syntactic categories, whereas most other approaches rely on postprocessing only.
