from the discussion so far it is clear that a number of formalisms involve some type of context-free rewriting (they have derivation trees that are local sets).
in considering the relationship between formalisms, we show that it is useful to abstract away from the details of the formalism, and examine the nature of their derivation process as reflected by properties their trees. find that several of the formalisms considered can be seen as being closely related since they have derivation tree sets with the same structure as those produced by context-free grammars on the basis of this observation, we describe a class of formalisms which we call linear context- free rewriting systems, and show they are recognizable in polynomial time and generate only semilinear languages.
each treelet (an internal node with all its children) represents the use of a rule that is encapsulated by the grammar the grammar encapsulates (either explicitly or implicitly) a finite number of rules that can be written as follows: n > 0 in the case of cfg's, for each production in the case of tag's, a derivation step in which the derived trees ri, • • • , on are adjoined into fi at rhe addresses • • • • in. would involve the use of the following rule2.
in a grammar which generates independent paths the derivations of sibling constituents can not share an unbounded amount of information.
thus, the tree sets generated by hg's are similar to those of cfg's, with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of tree adjoining grammars, a tree rewriting formalism, was introduced by joshi, levy and takahashi (1975) and joshi (1983/85).
