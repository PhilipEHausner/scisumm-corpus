free from the burden it also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- acknowledgments we thank luke zettlemoyer ing needs to be employed.
semresp requires a lexicon of 1.42 words per non-value predicate, wordnet features, and syntactic parse trees; dcs requires only words for the domain-independent predicates (overall, around 0.5 words per non-value predicate), pos tags, and very simple indicator features.
it is impossible to represent the semantics of this phrase with just a csp, so we introduce a new aggregate relation, notated e. consider a tree he:ci, whose root is connected to a child c via e. if the denotation of c is a set of values s, the parentâ€™s denotation is then a singleton set containing s. formally: figure 3(a) shows the dcs tree for our running example.
feedback from the context; for example, the lexical entry for borders world has been used to guide both syntactic parsing is s\np/np : ay.ax.border(x, y), which means (schuler, 2003) and semantic parsing (popescu et borders looks right for the first argument and left al., 2003; clarke et al., 2010).
these rules are often too stringent, cused on aligning text to a world (liang et al., 2009), and for complex utterances, especially in free word- using text in reinforcement learning (branavan et al., order languages, either disharmonic combinators are 2009; branavan et al., 2010), and many others.
