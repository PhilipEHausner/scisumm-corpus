even this may be nondeterministic in case the graph contains several non projective arcs whose lifts interact but we use the following algorithm to construct a minimal projective transformation d w a of a nonprojective dependency graph d w a the function smallest nonp arc returns the non projective arc with the shortest distance from head to dependent breaking ties from left to right 
it is worth noting that although nonprojective constructions are less frequent in ddt than in pdt they seem to be more deeply nested since only about can be projectivized with a single lift while almost of the non projective arcs in pdt only require a single lift 
however since we want to preserve as much of the original structure as possible we are interested in finding a transformation that involves a minimal number of lifts 
the last four columns in table show the distribution of nonprojective arcs with respect to the number of lifts required 
experiments using data from the prague dependency treebank show that the combined system can handle nonprojective constructions with a precision sufficient to yield a significant improvement in overall parsing accuracy 
in the experiments below we employ a data driven deterministic dependency parser producing labeled projective dependency graphs previously tested on swedish nivre et al and english nivre and scholz 
the increase is generally higher for pdt than for ddt which indicates a greater diversity in non projective constructions 
by contrast when we turn to a comparison of the three encoding schemes it is hard to find any significant differences and the overall impression is that it makes little or no difference which encoding scheme is used as long as there is some indication of which words are assigned their linear head instead of their syntactic head by the projective parser 
