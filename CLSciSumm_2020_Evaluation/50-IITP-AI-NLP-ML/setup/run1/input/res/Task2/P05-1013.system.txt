even this may be nondeterministic, in case the graph contains several non-projective arcs whose lifts interact, but we use the following algorithm to construct a minimal projective transformation d0 = (w, a0) of a (nonprojective) dependency graph d = (w, a): the function smallest-nonp-arc returns the non-projective arc with the shortest distance from head to dependent (breaking ties from left to right).
the last four columns in table 3 show the distribution of nonprojective arcs with respect to the number of lifts required.
it is worth noting that, although nonprojective constructions are less frequent in ddt than in pdt, they seem to be more deeply nested, since only about 80% can be projectivized with a single lift, while almost 95% of the non-projective arcs in pdt only require a single lift.
in the experiments below, we employ a data-driven deterministic dependency parser producing labeled projective dependency graphs,3 previously tested on swedish (nivre et al., 2004) and english (nivre and scholz, 2004).
in the first part of the experiment, dependency graphs from the treebanks were projectivized using the algorithm described in section 2.
finally, since non-projective constructions often involve long-distance dependencies, the problem is closely related to the recovery of empty categories and non-local dependencies in constituency-based parsing (johnson, 2002; dienes and dubey, 2003; jijkoun and de rijke, 2004; cahill et al., 2004; levy and manning, 2004; campbell, 2004).
compared to related work on the recovery of long-distance dependencies in constituency-based parsing, our approach is similar to that of dienes and dubey (2003) in that the processing of non-local dependencies is partly integrated in the parsing process, via an extension of the set of syntactic categories, whereas most other approaches rely on postprocessing only.
